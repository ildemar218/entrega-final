{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ildemar\\\\Desktop\\\\mi-proyecto\\\\src\\\\pages\\\\Products.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ProductCard from '../components/ProductCard';\nimport axios from 'axios';\nimport Modal from '../components/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Products = () => {\n  _s();\n  const [pokemonList, setPokemonList] = useState([]);\n  const [selectedProduct, setSelectedProduct] = useState(null); // Estado para el Pokémon seleccionado\n  const [showModal, setShowModal] = useState(false); // Estado para el modal\n\n  useEffect(() => {\n    obtenerDatos();\n  }, []);\n  const obtenerDatos = async () => {\n    try {\n      const uri = 'https://pokeapi.co/api/v2/pokemon/';\n      const response = await axios.get(uri);\n\n      // Mapea las URLs de los Pokémon y realiza solicitudes adicionales\n      const pokemonDetails = await Promise.all(response.data.results.map(async pokemon => {\n        const details = await axios.get(pokemon.url); // Obtén detalles de cada Pokémon\n        return {\n          id: details.data.id,\n          name: details.data.name,\n          image: details.data.sprites.front_default // Imagen del Pokémon\n        };\n      }));\n      setPokemonList(pokemonDetails); // Actualiza el estado con los detalles completos\n    } catch (error) {\n      console.error('Error al obtener los datos:', error);\n    }\n  };\n\n  // Maneja la apertura del modal\n  const handleShowModal = product => {\n    setSelectedProduct(product);\n    setShowModal(true);\n  };\n\n  // Maneja el cierre del modal\n  const handleCloseModal = () => {\n    setShowModal(false);\n    setSelectedProduct(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [pokemonList.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-4 mb-4\",\n      children: /*#__PURE__*/_jsxDEV(ProductCard, {\n        product: product,\n        onView: () => handleShowModal(product)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, product.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)), selectedProduct && /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onClose: handleCloseModal,\n      title: selectedProduct.name,\n      image: selectedProduct.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Products, \"IiwukAp2x39yTXtQWMMufZTkt0M=\");\n_c = Products;\nexport default Products;\nvar _c;\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"names":["React","useEffect","useState","ProductCard","axios","Modal","jsxDEV","_jsxDEV","Products","_s","pokemonList","setPokemonList","selectedProduct","setSelectedProduct","showModal","setShowModal","obtenerDatos","uri","response","get","pokemonDetails","Promise","all","data","results","map","pokemon","details","url","id","name","image","sprites","front_default","error","console","handleShowModal","product","handleCloseModal","className","children","onView","fileName","_jsxFileName","lineNumber","columnNumber","show","onClose","title","_c","$RefreshReg$"],"sources":["C:/Users/Ildemar/Desktop/mi-proyecto/src/pages/Products.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport ProductCard from '../components/ProductCard';\r\nimport axios from 'axios';\r\nimport Modal from '../components/Modal';\r\n\r\nconst Products = () => {\r\n  const [pokemonList, setPokemonList] = useState([]);\r\n  const [selectedProduct, setSelectedProduct] = useState(null); // Estado para el Pokémon seleccionado\r\n  const [showModal, setShowModal] = useState(false); // Estado para el modal\r\n\r\n  useEffect(() => {\r\n    obtenerDatos();\r\n  }, []);\r\n\r\n  const obtenerDatos = async () => {\r\n    try {\r\n      const uri = 'https://pokeapi.co/api/v2/pokemon/';\r\n      const response = await axios.get(uri);\r\n\r\n      // Mapea las URLs de los Pokémon y realiza solicitudes adicionales\r\n      const pokemonDetails = await Promise.all(\r\n        response.data.results.map(async (pokemon) => {\r\n          const details = await axios.get(pokemon.url); // Obtén detalles de cada Pokémon\r\n          return {\r\n            id: details.data.id,\r\n            name: details.data.name,\r\n            image: details.data.sprites.front_default, // Imagen del Pokémon\r\n          };\r\n        })\r\n      );\r\n\r\n      setPokemonList(pokemonDetails); // Actualiza el estado con los detalles completos\r\n    } catch (error) {\r\n      console.error('Error al obtener los datos:', error);\r\n    }\r\n  };\r\n\r\n  // Maneja la apertura del modal\r\n  const handleShowModal = (product) => {\r\n    setSelectedProduct(product);\r\n    setShowModal(true);\r\n  };\r\n\r\n  // Maneja el cierre del modal\r\n  const handleCloseModal = () => {\r\n    setShowModal(false);\r\n    setSelectedProduct(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {pokemonList.map((product) => (\r\n        <div className=\"col-md-4 mb-4\" key={product.id}>\r\n          <ProductCard product={product} onView={() => handleShowModal(product)} />\r\n        </div>\r\n      ))}\r\n\r\n      {/* Modal para mostrar los detalles */}\r\n      {selectedProduct && (\r\n        <Modal\r\n          show={showModal}\r\n          onClose={handleCloseModal}\r\n          title={selectedProduct.name}\r\n          image={selectedProduct.image}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}